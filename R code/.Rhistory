low_nutrient <- filter(stomatal_measurements, Nutrients == '50%Long Ashton')
low.aov<-aov(Response ~ CO2, data = filter(low_nutrient, Trait == 'Stomatal size'))
TukeyHSD(low.aov, conf.level = 0.95)
high_nutrient <- filter(stomatal_measurements, Nutrients == '100%Long Ashton')
high.aov<-aov(Response ~ CO2, data = filter(high_nutrient, Trait == 'Stomatal size'))
TukeyHSD(high.aov, conf.level = 0.95)
high.aov<-aov(Response ~ CO2, data = stomatal_measurements)
TukeyHSD(high.aov, conf.level = 0.95)
high.aov<-aov(Response ~ CO2*Nutrients, data = stomatal_measurements)
TukeyHSD(high.aov, conf.level = 0.95)
high.aov<-aov(Response ~ CO2+Nutrients, data = stomatal_measurements)
TukeyHSD(high.aov, conf.level = 0.95)
# Stomatal index
index.lm<-lm(Response ~ CO2*Nutrients, data = filter(data, Trait == 'Stomatal index'))
summary(index.lm)
# Stomatal index
index.lm<-lm(Response ~ CO2*Nutrients, data = filter(stomatal_measurements, Trait == 'Stomatal index'))
summary(index.lm)
index.lm<-lm(Response ~ CO2, data = filter(stomatal_measurements, Trait == 'Stomatal index'))
summary(index.lm)
index.lm<-lm(Response ~ Nutrients, data = filter(stomatal_measurements, Trait == 'Stomatal index'))
summary(index.lm)
# Do a Tukey post-hoc test to see differences within treatments
low_nutrient <- filter(stomatal_measurements, Nutrients == '50%Long Ashton')
low.aov<-aov(Response ~ CO2, data = filter(low_nutrient, Trait == 'Stomatal index'))
TukeyHSD(low.aov, conf.level = 0.95)
high_nutrient <- filter(stomatal_measurements, Nutrients == '100%Long Ashton')
high.aov<-aov(Response ~ CO2, data = filter(high_nutrient, Trait == 'Stomatal index'))
TukeyHSD(high.aov, conf.level = 0.95)
heatmap(stomatal_measurements)
glimpse(stomatal_measurements)
d <- as.matrix(stomatal_measurements)
d
heatmap(stomatal_measurements)
stomatal_measurements$Response <- as.numeric(stomatal_measurements$Response)
d <- as.matrix(stomatal_measurements)
d
heatmap(stomatal_measurements)
heatmap(d)
glimpse(stomatal_measurements)
stomatal_measurements$Response <- as.numeric(stomatal_measurements$Response)
glimpse(stomatal_measurements)
head(stomatal_measurements)
library(ggplot2)
stomatal_measurements %>%
filter(Trait == 'Stomatal size') %>%
ggplot(aes(x=Response)) +
geom_density()
stomatal_measurements %>%
filter(Trait == 'Stomatal size') %>%
ggplot(aes(x=Response)) +
geom_density() +
facet_wrap(~CO2)
library(ggridges)
stomatal_measurements %>%
filter(Trait == 'Stomatal size') %>%
ggplot(aes(x=Response, y = Trait)) +
geom_density_ridges() +
facet_wrap(~CO2)
stomatal_measurements %>%
#filter(Trait == 'Stomatal size') %>%
ggplot(aes(x=Response, y = Trait)) +
geom_density_ridges() +
facet_wrap(~CO2)
library(readr)
stomatal_measurements <- read_delim("Data/Oxalis combined stomatal measurements.csv", ";", escape_double = FALSE, trim_ws = TRUE)
View(stomatal_measurements)
# This script plots stacked barplots of epidermal traits with errorobars
library(ggplot2)
library(ggpmisc)
library(dplyr)
library(ggpubr)
library(readr)
leaf_traits <- read_delim("Data/Oxalis leaf traits.csv",";", escape_double = FALSE, trim_ws = TRUE)
theme <- theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background=element_rect(fill="white"),
axis.line=element_line("black"),
panel.border=element_rect(fill=NA,colour="black"),
strip.background=element_rect(fill="grey 80",colour="black"),
strip.text.x = element_text(size = 7),
legend.position = 'right')
leaf_traits$CO2 <- as.factor(leaf_traits$CO2)
leaf_traits$Nutrients = as.factor(leaf_traits$Nutrients)
leaf_traits$Response = as.numeric(sub("," , ".", leaf_traits$Response))
leaf_traits$Trait = as.factor(leaf_traits$Trait)
leaf_traits <- leaf_traits %>%
filter(Trait != 'Vascular bundle vertical',
Trait != 'Vascular bundle horizontal')
str(leaf_traits)
head(leaf_traits)
# Calculate the mean, SE and CI for the whole dataset
# Group calculations by treatment and by trait
summary_data <- leaf_traits %>%
group_by(Nutrients, CO2, Trait) %>%
summarise(
n=n(),
mean=mean(Response),
sd=sd(Response)
) %>%
mutate(se=sd/sqrt(n))  %>%
mutate(ic=se * qt((1-0.05)/2 + .5, n-1))
#  Plot means for high nutrients
leaf_stack <- ggbarplot(leaf_traits, x='CO2', y='Response',
add = 'mean_se', fill = 'Trait',
facet.by = 'Nutrients', palette = 'grey',
error.plot = 'errorbar') +
labs(x=expression(Growth~CO["2"]~~(ppm)),
y=expression(Leaf~thickness~(mu~m))) +
theme
# # axis text size and direction
# leaf_stack <- leaf_stack + theme(text = element_text(size=10),axis.text.x = element_text(angle=0, vjust=1,color="black"),axis.text.y = element_text(color="black"))
# # remove grid lines and set background white
# leaf_stack <- leaf_stack + theme(panel.grid.minor = element_blank(),panel.grid.major = element_blank(),panel.background=element_rect(fill="white"))
# # add black lines around panels
# leaf_stack <- leaf_stack + theme(axis.line=element_line("black"),panel.border=element_rect(fill=NA,colour="black"))
# # add strip at top of the figure
# leaf_stack <- leaf_stack + theme(strip.background=element_rect(fill="grey 80",colour="black"))
# leaf_stack <- leaf_stack + theme(legend.title = element_text(size = 8), legend.key.size = unit(0.4, 'cm'))
# # Move legend to the right
# leaf_stack <- leaf_stack + theme(legend.position = 'right')
# leaf_stack
leaf_stack
?ggbarplot
ggbarplot(leaf_traits, x='CO2', y='Response',
add = 'mean_se', fill = 'Trait', position = position_stack(),
facet.by = 'Nutrients', palette = 'grey',
error.plot = 'errorbar')
ggbarplot(leaf_traits, x='CO2', y='Response',
add = 'mean_se', fill = 'Trait', position = position_dodge(),
facet.by = 'Nutrients', palette = 'grey',
error.plot = 'errorbar')
ggbarplot(leaf_traits, x='CO2', y='Response',
add = 'mean_se', fill = 'Trait', position = position_dodge(0.9),
facet.by = 'Nutrients', palette = 'grey',
error.plot = 'errorbar')
ggbarplot(leaf_traits, x='CO2', y='Response',
add = 'mean_se', fill = 'Trait',
palette = 'grey',
error.plot = 'errorbar')
#  Plot means for high nutrients
leaf_stack <- ggbarplot(leaf_traits, x='CO2', y='Response',
add = 'mean_se', fill = 'Trait',
palette = 'grey',
error.plot = 'errorbar') +
labs(x=expression(Growth~CO["2"]~~(ppm)),
y=expression(Leaf~thickness~(mu~m))) +
theme
facet(leaf_stack, facet.by = 'Trait')
#  Plot means for high nutrients
leaf_stack <- ggbarplot(leaf_traits, x='CO2', y='Response',
add = 'mean_se', fill = 'Trait',
facet.by = 'Nutrients', palette = 'grey',
error.plot = 'errorbar') +
labs(x=expression(Growth~CO["2"]~~(ppm)),
y=expression(Leaf~thickness~(mu~m))) +
theme
library(ggplotly)
library(plotly)
ggplotly(leaf_stack)
library(readr)
calories <- read_csv("Data/Calories harvested.csv")
View(Calories_harvested)
View(calories)
calories <- read_csv("Data/Calories harvested.csv", delim = ';')
calories = read_delim("Data/Calories harvested.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
library(ggplot2)
library(ggpmisc)
library(dplyr)
library(ggpubr)
library(readr)
glimpse(calories)
calories$cal_per_min = as.numeric(sub("," , ".", calories$cal_per_min))
calories$hrs_to_2000_cal = as.numeric(sub("," , ".", calories$hrs_to_2000_cal))
summary_data <- calories %>%
group_by(co2) %>%
summarise(
n=n(),
mean=mean(cal_per_min),
sd=sd(cal_per_min)
) %>%
mutate(se=sd/sqrt(n))  %>%
mutate(ic=se * qt((1-0.05)/2 + .5, n-1))
?ggpubr
summary_data %>%
ggplot(eas(x = co2, y = mean)) + geom_dotplot()
summary_data %>%
ggplot(aes(x = co2, y = mean)) + geom_dotplot()
summary_data %>%
ggplot(aes(x = co2, y = mean)) + geom_errorbar()
summary_data %>%
ggplot(aes(x = co2, y = mean)) + geom_point()
summary_data %>%
#ggplot(aes(x = co2, y = mean)) + geom_point()
ggerrorplot(x = 'co2', y = 'mean', desc_stat = 'se')
summary_data %>%
#ggplot(aes(x = co2, y = mean)) + geom_point()
ggerrorplot(x = 'co2', y = 'mean', desc_stat = 'se', fill = 'black')
summary_data %>%
#ggplot(aes(x = co2, y = mean)) + geom_point()
ggdotplot(x = 'co2', y = 'mean'fill = 'black')
summary_data %>%
#ggplot(aes(x = co2, y = mean)) + geom_point()
ggdotplot(x = 'co2', y = 'mean', fill = 'black')
summary_data %>%
#ggplot(aes(x = co2, y = mean)) + geom_point()
ggdotplot(x = 'co2', y = 'mean', fill = 'black', error.plot = 'errorbar')
summary_data %>%
#ggplot(aes(x = co2, y = mean)) + geom_point()
ggdotplot(x = 'co2', y = 'cal_per_min', fill = 'black', error.plot = 'errorbar')
calories %>%
#ggplot(aes(x = co2, y = mean)) + geom_point()
ggdotplot(x = 'co2', y = 'cal_per_min', fill = 'black', error.plot = 'errorbar')
summary_data %>%
#ggplot(aes(x = co2, y = mean)) + geom_point()
ggdotplot(x = 'co2', y = 'mean', fill = 'black', error.plot = 'errorbar')
summary_data %>%
#ggplot(aes(x = co2, y = mean)) + geom_point()
ggdotplot(x = 'co2', y = 'mean', fill = 'black', add = 'mean_se', error.plot = 'errorbar')
summary_data %>%
ggplot(aes(x = co2, y = mean)) + geom_pointrange(ymin = mean-se, ymax = mean+se)
summary_data
summary_data %>%
ggplot(aes(x = co2, y = mean)) + geom_pointrange(ymin = mean-sd, ymax = mean+sd)
summary_data %>%
ggplot(aes(x = co2, y = mean)) + geom_pointrange(aes(ymin = mean-sd, ymax = mean+sd))
summary_data %>%
ggplot(aes(x = co2, y = mean)) + geom_pointrange(aes(ymin = mean-se, ymax = mean+se))
summary_data %>%
ggplot(aes(x = co2, y = mean)) + geom_errorbar(aes(ymin = mean-se, ymax = mean+se))
library(ggridges)
calories %>%
geom_density_ridges(aes(x=hrs_to_2000_cal, y=co2, fill=cos))
calories %>%
ggplot(aes(x=hrs_to_2000_cal, y=co2, fill=cos)) +
geom_density_ridges()
calories %>%
ggplot(aes(x=hrs_to_2000_cal, y=co2, fill=cos))
calories %>%
ggplot(aes(x=hrs_to_2000_cal, y=co2, fill=co2)) +
geom_density_ridges()
head(calories)
calories %>%
ggplot(aes(x=hrs_to_2000_cal, y=co2)) +
geom_density_ridges()
calories %>%
ggplot(aes(x=hrs_to_2000_cal, y=co2))
calories %>%
ggplot(aes(x=hrs_to_2000_cal, y=co2)) +
geom_density_ridges() +
theme_ridges()
calories %>%
ggplot(aes(x=hrs_to_2000_cal, y=as.factor(co2))) +
geom_density_ridges() +
theme_ridges()
calories %>%
ggplot(aes(x=hrs_to_2000_cal, y=as.factor(co2), fill = co2)) +
geom_density_ridges() +
theme_ridges()
calories %>%
ggplot(aes(x=cal_per_min, y=as.factor(co2), fill = co2)) +
geom_density_ridges() +
theme_ridges()
summary_data %>%
ggplot(aes(x = co2, y = mean)) + geom_dotplot()
summary_data %>%
ggplot(aes(x = co2, y = mean)) + geom_point()
calories %>%
ggplot(aes(x=hrs_to_2000_cal, y=co2)) +
geom_density_ridges(alpha=0.6, stat="binline", bins=20) +
theme_ridges()
calories %>%
ggplot(aes(x=hrs_to_2000_cal, y=as.factor(co2))) +
geom_density_ridges(alpha=0.6, stat="binline", bins=20) +
theme_ridges()
theme <- theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background=element_rect(fill="white"),
axis.line=element_line("black"),
panel.border=element_rect(fill=NA,colour="black"),
strip.background=element_rect(fill="grey 80",colour="black"),
strip.text.x = element_text(size = 7),
legend.position = 'right')
themed <- theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.background=element_rect(fill="white"),
axis.line=element_line("black"),
panel.border=element_rect(fill=NA,colour="black"),
strip.background=element_rect(fill="grey 80",colour="black"),
strip.text.x = element_text(size = 7),
legend.position = 'right')
summary_data %>%
ggplot(aes(x = co2, y = mean)) +
geom_point() +
themed
summary_data %>%
ggplot(aes(x = co2, y = mean)) +
geom_point() +
labs(x = expression(Growth~CO["2"]~~(ppm)), y = 'Calories harvested')
summary_data %>%
ggplot(aes(x = co2, y = mean)) +
geom_point() +
labs(x = expression(Growth~CO["2"]~~(ppm)), y = 'Calories harvested per minute')
summary_data %>%
ggplot(aes(x = co2, y = mean)) +
geom_point() +
labs(x = expression(Growth~CO["2"]~~(ppm)), y = 'Calories harvested per minute') +
themed
summary_data %>%
ggplot(aes(x = co2, y = mean)) +
geom_point() +
labs(x = expression(Growth~CO["2"]~~(ppm)), y = 'Calories harvested per minute') +
geom_smooth(method = "lm", formula = formula, size = 1,color="black",se=FALSE)
formula <- y ~ x
summary_data %>%
ggplot(aes(x = co2, y = mean)) +
geom_point() +
labs(x = expression(Growth~CO["2"]~~(ppm)), y = 'Calories harvested per minute') +
geom_smooth(method = "lm", formula = formula, size = 1,color="black",se=FALSE) +
stat_poly_eq(formula = formula, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size=3)
summary_data %>%
ggplot(aes(x = co2, y = mean)) +
geom_point() +
labs(x = expression(Growth~CO["2"]~~(ppm)), y = 'Calories harvested per minute') +
geom_smooth(method = "lm", formula = formula, size = 1,color="black",se=FALSE) +
stat_poly_eq(formula = formula, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size=3) +
themed
summary_data %>%
ggplot(aes(x = co2, y = mean)) +
geom_point() +
labs(x = expression(Growth~CO["2"]~~(ppm)), y = 'Calories harvested per minute') +
geom_smooth(method = "lm", formula = formula, size = 1,color="black",se=T) +
stat_poly_eq(formula = formula, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size=3) +
themed
summary_data <- calories %>%
mutate(cal_per_hr = cal_per_min/60) %>%
group_by(co2) %>%
summarise(
n=n(),
mean=mean(cal_per_min),
sd=sd(cal_per_min)
) %>%
mutate(se=sd/sqrt(n))  %>%
mutate(ic=se * qt((1-0.05)/2 + .5, n-1))
summary_data %>%
ggplot(aes(x = co2, y = mean)) +
geom_point() +
labs(x = expression(Growth~CO["2"]~~(ppm)), y = 'Calories harvested per minute') +
geom_smooth(method = "lm", formula = formula, size = 1,color="black",se=T) +
stat_poly_eq(formula = formula, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size=3) +
themed
summary_data <- calories %>%
mutate(cal_per_hr = cal_per_min/60) %>%
group_by(co2) %>%
summarise(
n=n(),
mean=mean(cal_per_hr),
sd=sd(cal_per_hr)
) %>%
mutate(se=sd/sqrt(n))  %>%
mutate(ic=se * qt((1-0.05)/2 + .5, n-1))
summary_data %>%
ggplot(aes(x = co2, y = mean)) +
geom_point() +
labs(x = expression(Growth~CO["2"]~~(ppm)), y = 'Calories harvested per minute') +
geom_smooth(method = "lm", formula = formula, size = 1,color="black",se=T) +
stat_poly_eq(formula = formula, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size=3) +
themed
summary_data %>%
ggplot(aes(x = co2, y = mean)) +
geom_point() +
labs(x = expression(Growth~CO["2"]~~(ppm)), y = 'Calories harvested per minute') +
geom_smooth(method = "lm", formula = formula, size = 1,color="black",se=T) +
stat_poly_eq(formula = formula, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size=3) +
themed
summary_data <- calories %>%
group_by(co2) %>%
summarise(
n=n(),
mean=mean(cal_per_min),
sd=sd(cal_per_min)
) %>%
mutate(se=sd/sqrt(n))  %>%
mutate(ic=se * qt((1-0.05)/2 + .5, n-1))
formula <- y ~ x
summary_data %>%
ggplot(aes(x = co2, y = mean)) +
geom_point() +
labs(x = expression(Growth~CO["2"]~~(ppm)), y = 'Calories harvested per minute') +
geom_smooth(method = "lm", formula = formula, size = 1,color="black",se=T) +
stat_poly_eq(formula = formula, aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, size=3) +
themed
library(ggplot2)
library(ggpmisc)
library(dplyr)
library(ggpubr)
library(readr)
library(ggridges)
library(hrbrthemes)
ggplot(data = calories, aes(x=hrs_to_2000_cal, y=cal_per_min)) + geom_point()
ggplot(data = calories, aes(x=hrs_to_2000_cal, y=cal_per_min, fill=species)) + geom_point()
ggplot(data = calories, aes(x=hrs_to_2000_cal, y=cal_per_min, fill=species, colour = species)) + geom_point()
ggplot(data = calories, aes(x=hrs_to_2000_cal, y=cal_per_min, fill=species, colour = species)) + geom_point() _ facet_wrap(~co2)
ggplot(data = calories, aes(x=hrs_to_2000_cal, y=cal_per_min, fill=species, colour = species)) + geom_point() + facet_wrap(~co2)
ggplot(data = calories, aes(x=hrs_to_2000_cal, y=cal_per_min)) + geom_point() + facet_wrap(~co2)
ggplot(data = calories, aes(x=hrs_to_2000_cal, y=cal_per_min, fill=co2, colour = co2)) + geom_point()
ggplot(data = calories, aes(x=hrs_to_2000_cal, y=cal_per_min, fill=as.factor(co2), colour = as.factor(co2))) + geom_point()
return <- read_delim("Data/Return rates by veg type.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(return)
library(tidyverse)
glimpse(return)
return$Cal_per_hr = as.numeric(sub("," , ".", return$Cal_per_hr))
ggplot(return, aes(CO2, Cal_per_hr)) +
geom_boxplot() +
geom_point(data = grid, colour = "red")
ggplot(return, aes(CO2, Cal_per_hr)) +
geom_boxplot()
ggplot(return, aes(CO2, Cal_per_hr, group = CO2)) +
geom_boxplot()
ggplot(return, aes(CO2, Cal_per_hr, group = CO2)) +
geom_boxplot() +
geom_point(data = grid, colour = "red")
ggplot(return, aes(CO2, Cal_per_hr, group = CO2)) +
geom_boxplot() +
geom_point()
ggplot(return, aes(CO2, Cal_per_hr, group = CO2)) +
geom_boxplot()
ggplot(return, aes(CO2, Cal_per_hr, group = CO2)) +
geom_boxplot() + facet_wrap(~`Vegetation Type`)
return %>%
filter(`Vegetation Type` == c('Sand fynbos', 'Dune fynbos-thicket mos.', 'Riparian')) %>%
ggplot(aes(y = as.factor(`Vegetation Type`), x = Cal_per_hr)) +
geom_density_ridges() +
facet_wrap(~CO2) +
labs(x = 'Calories per hour', y = NULL) +
themed
return %>%
filter(`Vegetation Type` == c('Sand fynbos', 'Dune fynbos-thicket mos.', 'Riparian')) %>%
ggplot(aes(CO2, Cal_per_hr, group = CO2)) +
geom_boxplot() +
facet_wrap(~`Vegetation Type`)
return %>%
filter(`Vegetation Type` == c('Sand fynbos', 'Dune fynbos-thicket mos.', 'Riparian')) %>%
ggplot(aes(CO2, Cal_per_hr, group = CO2)) +
geom_boxplot() +
themed +
facet_wrap(~`Vegetation Type`)
summary(return)
return %>% group_by(`Vegetation Type`) %>% summarise(x_bar = mean(Cal_per_hr), med = median(Cal_per_hr))
return %>% group_by(`Vegetation Type`, CO2) %>% summarise(x_bar = mean(Cal_per_hr), med = median(Cal_per_hr))
View(return %>% group_by(`Vegetation Type`, CO2) %>% summarise(x_bar = mean(Cal_per_hr), med = median(Cal_per_hr)))
View(return %>% group_by(`Vegetation Type`, CO2) %>% summarise(x_bar = mean(Cal_per_hr), med = median(Cal_per_hr)))
return %>%
filter(`Vegetation Type` == c('Sand fynbos', 'Dune fynbos-thicket mos.', 'Riparian')) %>%
ggplot(aes(CO2, Cal_per_hr, group = CO2)) +
geom_boxplot() +
themed +
facet_wrap(~`Vegetation Type`)
return %>%
filter(`Vegetation Type` == c('Sand fynbos', 'Dune fynbos-thicket mos.', 'Riparian'),
Cal_per_hr > 500) %>%
ggplot(aes(CO2, Cal_per_hr, group = CO2)) +
geom_boxplot() +
themed +
facet_wrap(~`Vegetation Type`)
return %>%
filter(`Vegetation Type` == c('Sand fynbos', 'Dune fynbos-thicket mos.', 'Riparian'),
Cal_per_hr > 400) %>%
ggplot(aes(CO2, Cal_per_hr, group = CO2)) +
geom_boxplot() +
themed +
facet_wrap(~`Vegetation Type`)
return %>%
filter(`Vegetation Type` == c('Sand fynbos', 'Dune fynbos-thicket mos.', 'Riparian'),
Cal_per_hr > 300) %>%
ggplot(aes(CO2, Cal_per_hr, group = CO2)) +
geom_boxplot() +
themed +
facet_wrap(~`Vegetation Type`)
return %>%
filter(`Vegetation Type` == c('Sand fynbos', 'Dune fynbos-thicket mos.', 'Riparian')) %>%
ggplot(aes(CO2, Cal_per_hr, group = CO2)) +
geom_boxplot() +
themed +
facet_wrap(~`Vegetation Type`)
return %>%
filter(`Vegetation Type` == c('Sand fynbos', 'Dune fynbos-thicket mos.', 'Riparian')) %>%
ggplot(aes(CO2, Cal_per_hr, group = CO2)) +
geom_boxplot(outlier.colour = 'red') +
themed +
facet_wrap(~`Vegetation Type`)
return %>%
filter(`Vegetation Type` == c('Sand fynbos', 'Dune fynbos-thicket mos.', 'Riparian')) %>%
ggplot(aes(CO2, Cal_per_hr, group = CO2)) +
geom_boxplot(outlier.colour = 'red', position = 'jitter') +
themed +
facet_wrap(~`Vegetation Type`)
return %>%
filter(`Vegetation Type` == c('Sand fynbos', 'Dune fynbos-thicket mos.', 'Riparian')) %>%
ggplot(aes(CO2, Cal_per_hr, group = CO2)) +
geom_boxplot(outlier.colour = 'red') +
themed +
facet_wrap(~`Vegetation Type`)
